let chooseBtn = document.getElementById('choose'), // Создаем переменную и присваиваем ей элемент страницы с ID=choose (в данном случае кнопку)
    receiveBtn = document.getElementById('receive'), // Также присваиваем другой переменной значение другого элемента страницы
    heading = document.getElementsByTagName('h2')[0], // Присваиваем переменной все элементы с тэгом H2. При этом создастся массив (или точнее псевдомассив). Поэтому для того, чтобы в последствии обращаться к элементам этого массива, нужно использовать индексы (например 1-й H2 страницы в данном случае мы можем получить вызвав heading[0]). При этом особенность метода getElementByTagName в том, что при в переменную всегда будет записан массив, вне зависимости от количества указанных тэгов на странице. В данном случае мы явно указываем при создании элемента, что обращаемся к первому элементу массива.
    nameInput = document.getElementsByClassName('contactform_name')[0], // При помощи данного метода присваеваем переменной элемент страницы по названию класса. Метод работает идентично с методом поиска по названию тега. Соответственно сразу указываем, что нам нужен первый элемент массива.
    phoneInput = document.querySelector('.contactform_phone'), // Присваиваем переменной элемент по названию селектора. Данный метод позволяет выбрать на странице первый элемент, соотвествующий заданному селектору. Стоит отметить, что необходимо указывать принадлежность селектора, в данном случае точку перед названием класса.
    mailInput = document.querySelectorAll('.contactform_mail')[0], // Метод похож на предыдущий. Но в отличие от него выбирает все элементы, соответствующие заданному селектору
    modal = document.querySelector('.modal'),
    closeBtn = document.querySelector('.close'),
    text = document.getElementsByName('message')[0],
    form = document.querySelector('.contactform_select');

function hover() {
    heading.textContent = "Действительно все!"; // Данная функция предназначена для изменения текста в переменной heading. Т.е. при вызове функции по какому-то событию поменяется текст в первом элементе H2
}

//chooseBtn.onmouseenter = hover; // Вешаем вызов функции hover() на событие наведения на кнопку идентификатором .choose. Функция вызывается без скобок. Данный формат назначения обработчиков событий устаревший, т.к. назначив один раз таким образом функцию, то потом поменять или удалить ее невозможно.

// Более правильный вариант назначения обработчика событие на наведение мыши на кнопку
chooseBtn.addEventListener('mouseenter', function() {
    heading.textContent = "Действительно все!";
}); // Отслеживаем событие при помощи метода addEventListener, который принимает 2 аргумента. 1- само отслеживаемое событие. 2- callback-функция (т.е. функция, которая вызовется тогда, когда это событие выполнится). Для примера создаем новую функцию, но также можно указать функцию, которая была оределена ранее (hover в нашем случае)

chooseBtn.addEventListener('mouseleave', function() {
    heading.textContent = "Все включено";
});

receiveBtn.addEventListener('click', function() { // Вызываем обработчкика события на клик мыши по кнопке recieveBtn
    modal.style.display = 'block';
});

closeBtn.addEventListener('click', function() {
    modal.style.display = 'none';
});

nameInput.addEventListener('input', function() {
    text.value = `Меня зовут ${nameInput.value}. И я хочу спросить: `;
});

form.addEventListener('submit', function() {
    modal.style.display = 'none';
    alert('Спасибо! Ваше сообщение успешно отправлено!');
});